kind: ConfigMap
apiVersion: v1
metadata:
  name: dd-agent-config
  namespace: default
data:
  istio-config: |-
    init_config:
    instances:
    - istio_mesh_endpoint: http://istio-telemetry.istio-system:42422/metrics
      mixer_endpoint: http://istio-telemetry.istio-system:15014/metrics
      galley_endpoint: http://istio-galley.istio-system:15014/metrics
      pilot_endpoint: http://istio-pilot.istio-system:15014/metrics
      send_histograms_buckets: true
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: datadog-agent
spec:
  template:
    metadata:
      labels:
        app: datadog-agent
      name: datadog-agent
    spec:
      serviceAccount: datadog-agent
      containers:
      - image: datadog/agent:latest
        name: datadog-agent
        ports:
          - containerPort: 8125
            hostPort: 8125
            name: dogstatsdport
            protocol: UDP
          - containerPort: 8126
            hostPort: 8126
            name: traceport
            protocol: TCP
        env:
          - name: DD_API_KEY
            value: <YOUR API KEY>
          - name: KUBERNETES
            value: "true"
          - name: DD_PROCESS_AGENT_ENABLED
            value: "true"
          - name: DD_APM_ENABLED
            value: "true"
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "true"
          # If the Datadog Agent cannot connect to your Kubelet API, try uncommenting the lines below.
          #- name: DD_KUBELET_TLS_VERIFY
          #  value: "false"
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_APM_NON_LOCAL_TRAFFIC
            value: "true"
          # If your Kubernetes is running the Containerd CRI, uncomment the lines below.
          - name: DD_CRI_SOCKET_PATH
            value: "/var/run/containerd/containerd.sock"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
          #- name: dockersocket
          #  mountPath: /var/run/docker.sock
          # If your Kubernetes is running the Containerd CRI, comment out the lines above.
          # Then uncomment the lines below.
          - name: containerdsocket
            mountPath: /var/run/containerd/containerd.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: passwd
            mountPath: /etc/passwd
            readOnly: true
          - name: logpath
            mountPath: /var/log/pods
          - name: pointerdir
            mountPath: /opt/datadog-agent/run
          - name: dd-agent-config
            mountPath: /conf.d
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
        #- hostPath:
        #    path: /var/run/docker.sock
        #  name: dockersocket
        # If your Kubernetes is running the Containerd CRI, comment out the lines above.
        # Then uncomment the lines below.
        - hostPath:
            path: /var/run/containerd/containerd.sock
          name: containerdsocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - hostPath:
            path: /etc/passwd
          name: passwd
        - hostPath:
            path: /var/log/pods
          name: logpath
        - hostPath:
            path: /opt/datadog-agent/run
          name: pointerdir
        - name: dd-agent-config
          configMap:
            name: dd-agent-config
            items:
            - key: istio-config
              path: istio.yaml
